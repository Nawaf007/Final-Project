@model IEnumerable<StudentManagmentSystem.Models.Assignment>

@{
    ViewBag.Title = "Index";
}

<h2 style="text-align:center; font-weight:bold">Assignement</h2>

<p>
    @if (ViewBag.idsc != null)
    {
        @Html.ActionLink("Back to Section Course", "Index", "SectionCourse", new { ids = ViewBag.ids, idc = ViewBag.idc }, null)
    }
    @if(ViewBag.UserType == "Admin" || ViewBag.UserType == "Teacher")
    {
        <a> | </a> @Html.ActionLink("Create New", "Create", new { idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc })
    }
</p>
<table class="table">
    <tr>
        @if (ViewBag.idsc == null)
        {
            <th>
                Section Name
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            Status
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TotalMarks)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Weightage)
        </th>
        <th>
            Manual
        </th>
        @if(ViewBag.UserType == "Student")
        {
            <th>
                Obtained Marks
            </th>
            <th>
                Solution
            </th>
        }
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        @if (ViewBag.idsc == null)
        {
            <td>
                @Html.DisplayFor(modelItem => item.SectionCourse.Section.Name)
            </td>
        }
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lookup.Values)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DueDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.TotalMarks)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Weightage)
        </td>
        <td>
            @if(item.FilePath.ToString() != " ")
            {
                <a href="@Url.Action("Download", new { @path = item.FilePath})">
                    Download
                </a>
            }
            else
            {
                <a>
                    No File
                </a>
            }
        </td>
        @if (ViewBag.UserType == "Student")
        {
            if (Html.DisplayFor(modelItem => item.SSAssignments).ToString() != "" && Html.DisplayFor(modelItem => item.SSAssignments.Where(ss => ss.SectionStudent.Student.AspNetUser.UserName == User.Identity.Name).First().Id).ToString() != "")
            {
                <td>
                    @Html.DisplayFor(modelItem => item.SSAssignments.Where(ss => ss.SectionStudent.Student.AspNetUser.UserName == User.Identity.Name).First().ObtainedMarks)
                </td>
                <td>
                    @if (Convert.ToDateTime(Html.DisplayFor(modelItem => item.DueDate).ToString()) >= DateTime.Now && Html.DisplayFor(modelItem => item.Lookup.Values).ToString() == "Active")
                    {
                        @Html.ActionLink("Resubmit", "Edit", "StudentAssignment", new { id = Convert.ToInt32(Html.DisplayFor(modelItem => item.SSAssignments.Where(ss => ss.SectionStudent.Student.AspNetUser.UserName == User.Identity.Name).First().Id).ToString()), idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc, ida = item.Id }, null)
                        <a> | </a>
                    }
                    <a href="@Url.Action("Download", new { @path = Html.DisplayFor(modelItem => item.SSAssignments.Where(ss => ss.SectionStudent.Student.AspNetUser.UserName == User.Identity.Name).First().FilePath).ToString()})">
                        Download
                    </a>
                </td>    
            }
            else
            {
                <td>
                    
                </td>
                <td>
                    @if (Convert.ToDateTime(Html.DisplayFor(modelItem => item.DueDate).ToString()) >= DateTime.Now && Html.DisplayFor(modelItem => item.Lookup.Values).ToString() == "Active")
                    {
                        @Html.ActionLink("Submit", "Create", "StudentAssignment", new { idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc, ida = item.Id }, null)
                    }
                    else
                    {
                        <a>Not Submitted</a>
                    }
                </td>
            }
        }
        <td>
            @if (ViewBag.UserType == "Admin" || ViewBag.UserType == "Teacher")
            {
                @Html.ActionLink("Edit", "Edit", new { id = item.Id, idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc }) <a> | </a>
            @Html.ActionLink("Student Assignment", "Index", "StudentAssignment", new { ida = item.Id, idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc }, null)
             <a> | </a> @Html.ActionLink("Delete", "Delete", new { id = item.Id, idsc = ViewBag.idsc, ids = ViewBag.ids, idc = ViewBag.idc })
            }
        </td>
    </tr>
}

</table>
